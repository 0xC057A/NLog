<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MonoDefaultClr>$(Registry:HKEY_LOCAL_MACHINE\SOFTWARE\Novell\Mono@DefaultCLR)</MonoDefaultClr>
    <!-- yes, this is broken but MSBuild does not support recursive registry access (where registry path is parameterized)
    so this will have to do. -->
    <MonoInstallLocation Condition="'$(MonoInstallLocation)' == ''">$(ProgramFiles)\Mono-$(MonoDefaultClr)</MonoInstallLocation>
    <MonoExists>false</MonoExists>
    <MonoExists Condition="Exists('$(MonoInstallLocation)\bin\gmcs.bat')">true</MonoExists>
  </PropertyGroup>

  <PropertyGroup>
    <OutputAssemblyPath>$(OutputPath)\$(AssemblyName).dll</OutputAssemblyPath>
    <ResponseFile>$(IntermediateOutputPath)\$(AssemblyName).rsp</ResponseFile>
  </PropertyGroup>

  <PropertyGroup>
    <!-- build mono command line, very limited options for now -->
    <MonoCommandLine>"$(MonoInstallLocation)\bin\gmcs.bat"</MonoCommandLine>
    <MonoCommandLine Condition="'$(DefineConstants)' != ''">$(MonoCommandLine) /define:$(DefineConstants)</MonoCommandLine>
    <MonoCommandLine Condition="'$(DocumentationFile)' != ''">$(MonoCommandLine) /doc:"$(DocumentationFile)"</MonoCommandLine>
    <MonoCommandLine Condition="'$(DebugSymbols)' == 'true'">$(MonoCommandLine) /debug+</MonoCommandLine>
    <MonoCommandLine Condition="'$(AssemblyOriginatorKeyFile)' != ''">$(MonoCommandLine) /keyfile:$(AssemblyOriginatorKeyFile)</MonoCommandLine>
    <MonoCommandLine Condition="'$(Optimize)' == 'true'">$(MonoCommandLine) /optimize+</MonoCommandLine>
    <MonoCommandLine Condition="'$(TreatWarningsAsErrors)' == 'true'">$(MonoCommandLine) /waraserror+</MonoCommandLine>
    <MonoCommandLine Condition="'$(WarningLevel)' != ''">$(MonoCommandLine) /warn:$(WarningLevel)</MonoCommandLine>
    <MonoCommandLine Condition="'$(OutputType)' == 'Exe'">$(MonoCommandLine) /target:exe</MonoCommandLine>
    <MonoCommandLine Condition="'$(OutputType)' == 'Library'">$(MonoCommandLine) /target:library</MonoCommandLine>
    <MonoCommandLine>$(MonoCommandLine) /out:"$(OutputAssemblyPath)"</MonoCommandLine>
    <MonoCommandLine>$(MonoCommandLine)@(Reference ->' /reference:"%(Identity)"', '')</MonoCommandLine>
    <MonoCommandLine>$(MonoCommandLine) @"$(ResponseFile)"</MonoCommandLine>
  </PropertyGroup>

  <Target Name="Build">
    <Error Text="Mono installation was not detected. Use MonoInstallLocation property to override." Condition="'$(MonoExists)' == 'false'" />
    <Message Text="Using Mono installation from $(MonoInstallLocation). Use MonoInstallLocation property to override." />
    <MakeDir Directories="$(OutputPath)" />
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <WriteLinesToFile File="$(ResponseFile)" Lines="@(Compile->' &quot;%(Identity)&quot;', '')" Overwrite="true" />
    <Exec Command="$(MonoCommandLine)"/>
  </Target>
</Project>
