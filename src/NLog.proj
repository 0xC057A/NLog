<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
    <BaseOutputDirectory>$(MSBuildProjectDirectory)\..\build\</BaseOutputDirectory>
    <ProjectTarget Condition="'$(ProjectTarget)'==''">Build</ProjectTarget>
    <FrameworksPath>$(MSBuildProjectDirectory)\Frameworks</FrameworksPath>
    <BuildAllFrameworks>true</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildMono2)' == 'true'">false</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildSL2)' == 'true'">false</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildSL3)' == 'true'">false</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildNetFX20)' == 'true'">false</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildNetFX35)' == 'true'">false</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildNetFX40)' == 'true'">false</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildNetCF20)' == 'true'">false</BuildAllFrameworks>
    <BuildAllFrameworks Condition="'$(BuildNetCF35)' == 'true'">false</BuildAllFrameworks>
    <SLTestRunner>$(MSBuildProjectDirectory)\..\tests\SilverlightConsoleRunner\bin\$(Configuration)\SilverlightConsoleRunner.exe</SLTestRunner>
    <DumpTestResultSummary>$(MSBuildProjectDirectory)\..\tools\DumpTestResultSummary\bin\$(Configuration)\DumpTestResultSummary.exe</DumpTestResultSummary>
    <DeployNetCF>..\tools\DeployNetCF.exe</DeployNetCF>
    <DisableStyleCop Condition="'$(DisableStyleCop)' == ''">false</DisableStyleCop>
    <InfoZip>zip.exe</InfoZip>
    <Svn>svn.exe</Svn>
    <ArchiveOutputPath>$(BaseOutputDirectory)Archive</ArchiveOutputPath>
    <ConfigurationSuffix Condition="'$(Configuration)' == 'Debug'">-debug</ConfigurationSuffix>
  </PropertyGroup>

  <!-- detect location of various SDKs and tools-->
  <PropertyGroup>
    <DotNet4Version>v4.0.30128</DotNet4Version>
    <SL2RefPath Condition="'$(SL2InstallPath)' == ''">$(Registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SDKs\Silverlight\v2.0\Install Path@Install Path)</SL2RefPath>
    <SL3RefPath Condition="'$(SL3RefPath)' == ''">$(ProgramFiles)\Reference Assemblies\Microsoft\Framework\Silverlight\v3.0</SL3RefPath>
    <NetCF20InstallRoot>$(Registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETCompactFramework\v2.0.0.0\InstallRoot)</NetCF20InstallRoot>
    <NetCF35InstallRoot>$(Registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETCompactFramework\v3.5.0.0\InstallRoot)</NetCF35InstallRoot>

    <!-- yes, this is broken but MSBuild does not support recursive registry access (where registry path is parameterized)
    so this will have to do. -->
    <MonoDefaultClr>$(Registry:HKEY_LOCAL_MACHINE\SOFTWARE\Novell\Mono@DefaultCLR)</MonoDefaultClr>
    <MonoInstallLocation Condition="'$(MonoInstallLocation)' == '' and $(MonoDefaultClr) != ''">$(ProgramFiles)\Mono-$(MonoDefaultClr)</MonoInstallLocation>

    <MSTest9>$(VS90COMNTOOLS)..\IDE\MSTest.exe</MSTest9>
    <MSTest10>$(VS100COMNTOOLS)..\IDE\MSTest.exe</MSTest10>

    <StyleCopTargetsFile>$(MSBuildExtensionsPath)\Microsoft\StyleCop\v4.3\Microsoft.StyleCop.Targets</StyleCopTargetsFile>
    <StyleCopProperties Condition="'$(DisableStyleCop)' == 'false' and Exists('$(StyleCopTargetsFile)')">StyleCopTargetsFile=$(StyleCopTargetsFile)</StyleCopProperties>
  </PropertyGroup>

  <!-- at this point, if $(BuildAllFrameworks)=='true' it means that the user has not requested 
    any specific framework, so we build all that are available -->
  <PropertyGroup Condition="'$(BuildAllFrameworks)' == 'true'">
    <BuildMono2>true</BuildMono2>
    <BuildSL2>true</BuildSL2>
    <BuildSL3>true</BuildSL3>
    <BuildNetFX20>true</BuildNetFX20>
    <BuildNetFX35>true</BuildNetFX35>
    <BuildNetFX40>true</BuildNetFX40>
    <BuildNetCF20>true</BuildNetCF20>
    <BuildNetCF35>true</BuildNetCF35>

    <!-- now disable those that we know cannot be built -->
    <BuildMono2 Condition="'$(MonoInstallLocation)'==''">false</BuildMono2>
    <BuildSL2 Condition="'$(SL2RefPath)' == ''">false</BuildSL2>
    <BuildSL3 Condition="'$(SL3RefPath)' == ''">false</BuildSL3>
    <BuildNetCF20 Condition="'$(NetCF20InstallRoot)' == ''">false</BuildNetCF20>
    <BuildNetCF35 Condition="'$(NetCF35InstallRoot)' == ''">false</BuildNetCF35>
    <BuildNetFX20 Condition="!Exists('$(WINDIR)\Microsoft.NET\Framework\v2.0.50727') == ''">false</BuildNetFX20>
    <BuildNetFX35 Condition="!Exists('$(WINDIR)\Microsoft.NET\Framework\v3.5') == ''">false</BuildNetFX35>
    <BuildNetFX40 Condition="!Exists('$(WINDIR)\Microsoft.NET\Framework\$(DotNet4Version)') == ''">false</BuildNetFX40>

    <!-- don't build 4.0 if we're using MSBuild 3.5 -->
    <BuildNetFX40 Condition="'$(MSBuildToolsVersion)'=='3.5'">false</BuildNetFX40>
  </PropertyGroup>

  <ItemGroup>
    <TargetFramework Include="Mono 2.x" Condition="'$(BuildMono2)' == 'true'">
        <ProjectFileSuffix>.mono2</ProjectFileSuffix>
        <ToolsVersion>3.5</ToolsVersion>
    </TargetFramework>
    <TargetFramework Include="Silverlight 2.0" Condition="'$(BuildSL2)'=='true'">
        <ProjectFileSuffix>.sl2</ProjectFileSuffix>
        <ToolsVersion>3.5</ToolsVersion>
    </TargetFramework>
    <TargetFramework Include="Silverlight 3.0" Condition="'$(BuildSL3)'=='true'">
        <ProjectFileSuffix>.sl3</ProjectFileSuffix>
        <ToolsVersion>3.5</ToolsVersion>
    </TargetFramework>
    <TargetFramework Include=".NET Compact Framework 2.0" Condition="'$(BuildNetCF20)'=='true'">
        <ProjectFileSuffix>.netcf20</ProjectFileSuffix>
        <ToolsVersion>3.5</ToolsVersion>
    </TargetFramework>
    <TargetFramework Include=".NET Compact Framework 3.5" Condition="'$(BuildNetCF35)'=='true'">
        <ProjectFileSuffix>.netcf35</ProjectFileSuffix>
        <ToolsVersion>3.5</ToolsVersion>
    </TargetFramework>
    <TargetFramework Include=".NET Framework 2.0" Condition="'$(BuildNetFX20)'=='true'">
        <ProjectFileSuffix>.netfx20</ProjectFileSuffix>
        <ToolsVersion>3.5</ToolsVersion>
    </TargetFramework>
    <TargetFramework Include=".NET Framework 3.5" Condition="'$(BuildNetFX35)'=='true'">
        <ProjectFileSuffix>.netfx35</ProjectFileSuffix>
        <ToolsVersion>3.5</ToolsVersion>
    </TargetFramework>
    <TargetFramework Include=".NET Framework 4.0" Condition="'$(BuildNetFX40)'=='true'">
        <ProjectFileSuffix>.netfx40</ProjectFileSuffix>
        <ToolsVersion>4.0</ToolsVersion>
    </TargetFramework>
  </ItemGroup>

  <Target Name="All" DependsOnTargets="Clean;Build;BuildTests;RunTests;Documentation">
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build">
  </Target>

  <Target Name="Build">
    <MSBuild Projects="NLog\NLog%(TargetFramework.ProjectFileSuffix).csproj" 
             Targets="Build" 
             Properties="$(StyleCopProperties);%(TargetFramework.Properties);BaseOutputDirectory=$(BaseOutputDirectory)" 
             ToolsVersion="%(TargetFramework.ToolsVersion)" 
             ContinueOnError="$(BuildAllFrameworks)" 
             StopOnFirstFailure="false" />
    <MSBuild Projects="NLog\NLog.Extended%(TargetFramework.ProjectFileSuffix).csproj" 
             Targets="Build" 
             Properties="$(StyleCopProperties);%(TargetFramework.Properties);BaseOutputDirectory=$(BaseOutputDirectory)" 
             ToolsVersion="%(TargetFramework.ToolsVersion)" 
             ContinueOnError="$(BuildAllFrameworks)" 
             StopOnFirstFailure="false"
             Condition="Exists('NLog\NLog.Extended%(TargetFramework.ProjectFileSuffix).csproj')" />
  </Target>

  <Target Name="BuildTests" DependsOnTargets="Build">
    <MSBuild Projects="..\tests\NLog.UnitTests\NLog.UnitTests%(TargetFramework.ProjectFileSuffix).csproj" 
             Targets="Build" 
             Properties="%(TargetFramework.Properties);BaseOutputDirectory=$(BaseOutputDirectory)" 
             ContinueOnError="$(BuildAllFrameworks)" 
             StopOnFirstFailure="false" />
  </Target>

  <Target Name="RunTests">
    <CallTarget Targets="DeleteTrxFiles" />
    <CallTarget Targets="PrepareTestResultSummary" />
    <CallTarget Targets="NetFx20Test" Condition="'$(BuildNetFX20)'=='true'"/>
    <CallTarget Targets="NetFx35Test" Condition="'$(BuildNetFX35)'=='true'"/>
    <CallTarget Targets="NetFx40Test" Condition="'$(BuildNetFX40)'=='true'"/>
    <CallTarget Targets="NetCF20Test" Condition="'$(BuildNetCF20)'=='true'"/>
    <CallTarget Targets="NetCF35Test" Condition="'$(BuildNetCF35)'=='true'"/>
    <CallTarget Targets="SL2Test" Condition="'$(BuildSL2)'=='true'"/>
    <CallTarget Targets="SL3Test" Condition="'$(BuildSL3)'=='true'"/>
  </Target>

  <Target Name="NetFx20Test">
    <Exec Command='"$(MSTest9)" /nologo /testcontainer:NLog.UnitTests.dll /resultsfile:TestResults.trx' 
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\.NET Framework 2.0" 
          Condition="Exists('$(MSTest9)')" IgnoreExitCode="true" />
  </Target>                

  <Target Name="NetFx35Test">
    <Exec Command='"$(MSTest9)" /nologo /testcontainer:NLog.UnitTests.dll /resultsfile:TestResults.trx' 
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\.NET Framework 3.5" 
          Condition="Exists('$(MSTest9)')" IgnoreExitCode="true" />
  </Target>

  <Target Name="NetFx40Test">
    <Exec Command='"$(MSTest10)" /nologo /testcontainer:NLog.UnitTests.dll /resultsfile:TestResults.trx'
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\.NET Framework 4.0" 
          Condition="Exists('$(MSTest10)')" IgnoreExitCode="true" />
  </Target>

  <Target Name="NetCf20Test" DependsOnTargets="DeployNetCf20ToEmulator">
    <Copy SourceFiles="SmartDeviceTestRun.testrunConfig" DestinationFolder="$(BaseOutputDirectory)\bin\$(Configuration)\.NET Compact Framework 2.0" />
    <Exec Command='"$(MSTest9)" /nologo /runconfig:SmartDeviceTestRun.testrunConfig /testcontainer:NLog.UnitTests.dll /resultsfile:TestResults.trx'
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\.NET Compact Framework 2.0"
          Condition="Exists('$(MSTest9)')" IgnoreExitCode="true" />
    <Exec Command="TaskKill /f /im DeviceEmulator.exe" IgnoreExitCode="true" />
  </Target>

  <Target Name="NetCf35Test" DependsOnTargets="DeployNetCf35ToEmulator">
    <Copy SourceFiles="SmartDeviceTestRun.testrunConfig" DestinationFolder="$(BaseOutputDirectory)\bin\$(Configuration)\.NET Compact Framework 3.5" />
    <Exec Command='"$(MSTest9)" /nologo /runconfig:SmartDeviceTestRun.testrunConfig /testcontainer:NLog.UnitTests.dll /resultsfile:TestResults.trx'
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\.NET Compact Framework 3.5"
          Condition="Exists('$(MSTest9)')" IgnoreExitCode="true" />
    <Exec Command="TaskKill /f /im DeviceEmulator.exe" IgnoreExitCode="true" />
  </Target>

  <Target Name="SL2Test" DependsOnTargets="BuildSLTestRunner">
    <Exec Command='"$(SLTestRunner)" NLog.UnitTests.xap SL2'
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\Silverlight 2.0" />
  </Target>

  <Target Name="SL3Test" DependsOnTargets="BuildSLTestRunner">
    <Exec Command='"$(SLTestRunner)" NLog.UnitTests.xap SL3'
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\Silverlight 3.0" />
  </Target>

  <Target Name="CheckinSuite">
    <CallTarget Targets="DeepClean" />
    <CallTarget Targets="Rebuild" />
    <CallTarget Targets="BuildTests" />
    <CallTarget Targets="RunTests" />
    <CallTarget Targets="PrepareTestResultSummary" />
  </Target>

  <Target Name="DeleteTrxFiles">
    <Delete Files='$(BaseOutputDirectory)\bin\$(Configuration)\%(TargetFramework.Identity)\TestResults.trx' />
  </Target>

  <Target Name="PrepareTestResultSummary" DependsOnTargets="BuildTestResultSummaryTool">
    <WriteLinesToFile File="LastTestRunSummary.cmd" Lines='@echo off' Overwrite="true" />
    <WriteLinesToFile File="LastTestRunSummary.cmd" Lines='echo ---------------------' />
    <WriteLinesToFile File="LastTestRunSummary.cmd" Lines='echo Test run summary:' />
    <WriteLinesToFile File="LastTestRunSummary.cmd" Lines='echo ---------------------' />
    <WriteLinesToFile File="LastTestRunSummary.cmd" Lines='"$(DumpTestResultSummary)" "%(TargetFramework.Identity)" "$(BaseOutputDirectory)\bin\$(Configuration)\%(TargetFramework.Identity)\TestResults.trx"' />
  </Target>

  <Target Name="Documentation">
    <Exec Command='"$(MSBuildBinPath)\MSBuild.exe" Docs\NLog.shfbproj /p:Framework="%(TargetFramework.Identity)" /p:Configuration=$(Configuration)' ContinueOnError="$(BuildAllFrameworks)" />
  </Target>

  <Target Name="DeployNetCf20ToEmulator">
    <Exec Command="TaskKill /f /im DeviceEmulator.exe" IgnoreExitCode="true" />
    <Exec Command="$(DeployNetCF) 3C41C503-53EF-4c2a-8DD4-A8217CAD115E E282E6BE-C7C3-4ece-916A-88FB1CF8AF3C 2.0 \Windows\NETCFv2.ppc.armv4.cab" />
  </Target>

  <Target Name="DeployNetCf35ToEmulator">
    <Exec Command="TaskKill /f /im DeviceEmulator.exe" IgnoreExitCode="true" />
    <Exec Command="$(DeployNetCF) 3C41C503-53EF-4c2a-8DD4-A8217CAD115E E282E6BE-C7C3-4ece-916A-88FB1CF8AF3C 3.5 \Windows\NETCFv35.ppc.armv4.cab" />
  </Target>

  <Target Name="BuildSLTestRunner">
    <MSBuild Projects="..\tests\SilverlightConsoleRunner\SilverlightConsoleRunner.csproj" />
  </Target>

  <Target Name="BuildTestResultSummaryTool">
    <MSBuild Projects="..\tools\DumpTestResultSummary\DumpTestResultSummary.csproj" />
  </Target>

  <Target Name="Clean">
     <RemoveDir Directories="@(TargetFramework -> '$(BaseOutputDirectory)bin\$(Configuration)\%(Identity)')" />
     <RemoveDir Directories="@(TargetFramework -> '$(BaseOutputDirectory)obj\$(Configuration)\%(Identity)')" />
  </Target>

  <Target Name="Archive">
    <MakeDir Directories="$(ArchiveOutputPath)" />
    <Exec Command='$(InfoZip) "$(ArchiveOutputPath)\NLog2%(TargetFramework.ProjectFileSuffix)$(ArchiveSuffix)$(ConfigurationSuffix).zip" NLog.*' 
          WorkingDirectory="$(BaseOutputDirectory)\bin\$(Configuration)\%(TargetFramework.Identity)" />
    <RemoveDir Directories="$(ArchiveOutputPath)\sources" />
    <Exec Command='$(Svn) export . "$(ArchiveOutputPath)\sources"' WorkingDirectory=".." />
    <Exec Command='$(InfoZip) -r "..\NLog2-sources$(ArchiveSuffix).zip" *.*' 
          WorkingDirectory="$(ArchiveOutputPath)\sources" />
  </Target>

  <ItemGroup>
    <FilesToCleanup Include="..\**\*.suo" />
    <FilesToCleanup Include="..\**\*.ncb" />
    <FilesToCleanup Include="..\**\*.user" />
    <FilesToCleanup Include="..\**\*.cache" />
    <FilesToCleanup Include="LastTestRunSummary.cmd" />
    <DirectoriesToCleanup Include="_ReSharper.*" />
    <DirectoriesToCleanup Include="..\build\bin" />
    <DirectoriesToCleanup Include="..\build\obj" />
    <DirectoriesToCleanup Include="Docs\Working" />
    <DirectoriesToCleanup Include="TestResults" />
    <ProjectsToCleanup Include="NLog" />
    <ProjectsToCleanup Include="NLogC" />
    <ProjectsToCleanup Include="Doc" />
    <ProjectsToCleanup Include="..\tests\NLog.AsyncBenchmark" />
    <ProjectsToCleanup Include="..\tests\NLog.Benchmark" />
    <ProjectsToCleanup Include="..\tests\NLog.BinaryCompatTests" />
    <ProjectsToCleanup Include="..\tests\NLog.Test" />
    <ProjectsToCleanup Include="..\tests\NLog.UnitTests" />
    <ProjectsToCleanup Include="..\tests\NLog.UnitTests.Web" />
    <ProjectsToCleanup Include="..\tests\NLog.VBTest" />
    <ProjectsToCleanup Include="..\tests\NLogC.Tests" />
    <ProjectsToCleanup Include="..\tests\SilverlightConsoleRunner" />
    <ProjectsToCleanup Include="..\tools\MakeNLogXSD" />
    <ProjectsToCleanup Include="..\tools\DeployNetCF" />
    <ProjectsToCleanup Include="..\tools\DumpTestResultSummary" />
    <SolutionFiles Include="..\**\*.sln" />
  </ItemGroup>

  <Target Name="DeepClean">
     <Delete Files="@(FilesToCleanup)" />
     <RemoveDir Directories="@(DirectoriesToCleanup)" />
     <RemoveDir Directories="@(ProjectsToCleanup -> '%(Identity)\bin')" />
     <RemoveDir Directories="@(ProjectsToCleanup -> '%(Identity)\obj')" />
     <RemoveDir Directories="@(SolutionFiles -> '%(RelativeDir)_ReSharper.%(filename)')" />
  </Target>

  <Import Project="NLog.local" Condition="Exists('NLog.local')" />
</Project>