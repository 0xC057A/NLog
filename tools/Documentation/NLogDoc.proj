<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!-- Project Setup -->
    <PresentationStyle Condition="'$(PresentationStyle)' == ''">vs2005</PresentationStyle>
    <OutputAssembly>..\..\build\net-2.0-debug\bin\NLog.dll</OutputAssembly>
    <OutputDir>Output</OutputDir>
    <ChmDir>chm</ChmDir>
    <Comments>comments.xml</Comments>

    <!-- Environment -->
    <Framework>$(WINDIR)\Microsoft.NET\Framework\v2.0.50727</Framework>
    <DxRoot Condition="'$(DxRoot)' == ''">C:\Program Files\Sandcastle</DxRoot>
    <ProductionTools>$(DxRoot)\ProductionTools</ProductionTools>
    <ProductionTransforms>$(DxRoot)\ProductionTransforms</ProductionTransforms>
    <Presentation>$(DxRoot)\Presentation\$(PresentationStyle)</Presentation>
    <HHC>$(PROGRAMFILES)\Html Help Workshop\hhc.exe</HHC>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="Chm">
  </Target>

  <Target Name="Clean">
    <RemoveDir Directories="$(OutputDir)" ContinueOnError="true"/>
    <RemoveDir Directories="$(ChmDir)" ContinueOnError="true"/>
    <Delete Files="reflection.xml;ChmProject.hhp" TreatErrorsAsWarnings="true"/>
  </Target>

  <Target Name="FxReflection">
    <!--
     <Exec Command="$(Framework)\msbuild fxReflection.proj /property:PresentationStyle=$(PresentationStyle)" />  
     -->
  </Target>

  <Target Name="CopyLocal">
  </Target>

  <ItemGroup>
    <IconFiles Include="$(Presentation)\icons\**\*.*"/>
    <ScriptFiles Include="$(Presentation)\scripts\**\*.*"/>
    <StyleFiles Include="$(Presentation)\styles\**\*.*"/>
  </ItemGroup>

  <Target Name="Template" Condition="!Exists('$(OutputDir)')">
    <Copy SourceFiles="@(IconFiles)" DestinationFiles="@(IconFiles->'$(OutputDir)\icons\%(RecursiveDir)%(FileName)%(Extension)')"/>
    <Copy SourceFiles="@(ScriptFiles)" DestinationFiles="@(ScriptFiles->'$(OutputDir)\scripts\%(RecursiveDir)%(FileName)%(Extension)')"/>
    <Copy SourceFiles="@(StyleFiles)" DestinationFiles="@(StyleFiles->'$(OutputDir)\styles\%(RecursiveDir)%(FileName)%(Extension)')"/>
    <MakeDir Directories="$(OutputDir)\html;$(OutputDir)\media;$(OutputDir)\intellisense"/>
  </Target>

  <Target Name="ReflectionData" DependsOnTargets="Template" Inputs="$(OutputAssembly)" Outputs="reflection.xml">
    <Exec Command='"$(ProductionTools)\MRefBuilder.exe" "$(OutputAssembly)" /out:"$(OutputDir)\reflection_base.xml"' />
    <Exec Condition="'$(PresentationStyle)' == 'prototype'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyPrototypeDocModel.xsl" /xsl:"$(ProductionTransforms)\AddGuidFilenames.xsl" "$(OutputDir)\reflection_base.xml" /out:"reflection.xml"' />
    <Exec Condition="'$(PresentationStyle)' == 'vs2005'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyVSDocModel.xsl" /xsl:"$(ProductionTransforms)\AddFriendlyFilenames.xsl" "$(OutputDir)\reflection_base.xml" /out:"reflection.xml" /arg:IncludeAllMembersTopic=true /arg:IncludeInheritedOverloadTopics=true' />
    <Exec Condition="'$(PresentationStyle)' == 'hana'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyVSDocModel.xsl" /xsl:"$(ProductionTransforms)\AddFriendlyFilenames.xsl" "$(OutputDir)\reflection_base.xml" /out:"reflection.xml" /arg:IncludeAllMembersTopic=false /arg:IncludeInheritedOverloadTopics=true' />
  </Target>

  <Target Name="Manifest" DependsOnTargets="ReflectionData" Inputs="reflection.xml" Outputs="$(OutputDir)\manifest.xml">
    <Exec Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ReflectionToManifest.xsl" "reflection.xml" /out:"$(OutputDir)\manifest.xml"' />
  </Target>

  <Target Name="Html"
          Inputs="$(OutputDir)\manifest.xml;reflection.xml;nlog_content.xml;$(Comments)"
          Outputs="$(OutputDir)\htmldone.xml"
          DependsOnTargets="Manifest">
    <Exec Command='"$(ProductionTools)\BuildAssembler.exe" /config:"sandcastle.config" "$(OutputDir)\manifest.xml"' />
    <WriteLinesToFile File='$(OutputDir)\htmldone.xml' Lines='OK' />
  </Target>

  <Target Name="TableOfContents"
          Inputs="$(OutputDir)\htmldone.xml"
          Outputs="$(OutputDir)\Toc.xml"
          DependsOnTargets="Html">
    <Exec Condition="'$(PresentationStyle)' == 'prototype'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\CreatePrototypeToc.xsl" reflection.xml /out:"$(OutputDir)\Toc.xml"' />
    <Exec Condition="'$(PresentationStyle)' != 'prototype'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\CreateVSToc.xsl" reflection.xml /out:"$(OutputDir)\Toc.xml"' />
  </Target>

  <Target Name="Chm"
          Inputs="$(OutputDir)\htmldone.xml;$(OutputDir)\Toc.xml;reflection.xml"
          Outputs="$(ChmDir)\NLog.chm"
          DependsOnTargets="TableOfContents">
    <MakeDir Directories="$(chmDir)"
             Condition="!Exists('$(chmDir)')" />
    <MakeDir Directories="$(chmDir)\Html"
             Condition="!Exists('$(chmDir)\Html')" />
    <MakeDir Directories="$(chmDir)\Icons"
             Condition="!Exists('$(chmDir)\Icons')" />
    <MakeDir Directories="$(chmDir)\Scripts"
             Condition="!Exists('$(chmDir)\Scripts')" />
    <MakeDir Directories="$(chmDir)\Styles"
             Condition="!Exists('$(chmDir)\Styles')" />
    <MakeDir Directories="$(chmDir)\Local"
             Condition="!Exists('$(chmDir)\Local')" />

    <!--copy directories from hxs -->
    <Exec Condition="Exists('$(OutputDir)\Icons')"
          Command="xcopy.exe $(OutputDir)\Icons\* $(chmDir)\Icons\ /y /r"/>
    <Exec Condition="Exists('$(OutputDir)\Scripts')"
          Command="xcopy.exe $(OutputDir)\Scripts\* $(chmDir)\Scripts\ /y /r"/>
    <Exec Condition="Exists('$(OutputDir)\Styles')"
          Command="xcopy.exe $(OutputDir)\Styles\* $(chmDir)\Styles\ /y /r"/>
    <Exec Condition="Exists('$(OutputDir)\Local')"
          Command="xcopy.exe $(OutputDir)\Local\* $(chmDir)\Local\ /y /r"/>

    <!-- generate CHM-specific HTML and HH* files -->
    <Exec Command="&quot;$(ProductionTools)\ChmBuilder.exe&quot; /project:NLog /html:$(OutputDir)\html /lcid:1033 /toc:$(OutputDir)\Toc.xml /out:$(chmDir)"/>

    <Exec Condition="'$(PresentationStyle)' == 'prototype'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ReflectionToChmIndex.xsl" reflection.xml /out:"$(chmDir)\NLog.hhk"' />
    <Exec Command="&quot;$(ProductionTools)\DBCSFix.exe&quot; /d:$(chmDir) /l:1033"/>

    <Exec Command='"$(HHC)" "$(chmDir)\NLog.hhp"' IgnoreExitCode="true" />
  </Target>

  <Target Name="HxS"
          DependsOnTargets="Build"
          Inputs="$(DocumentationDir)\html\*.htm;$(OutputDir)\toc.xml"
          Outputs="$(OutputDir)\NLog.hxs">
    <Copy SourceFiles="@(HxsFiles)" DestinationFiles="@(HxsFiles->'$(OutputDir)\%(RecursiveDir)%(FileName)%(Extension)')"/>
    <Exec Command='"$(DXROOT)\Presentation\shared\copyhavana.bat" NLog' />
    <Exec Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\CreateHxc.xsl" $(OutputDir)\toc.xml /arg:fileNamePrefix=NLog /out:"$(OutputDir)\NLog.HxC"' />
    <Exec Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\TocToHxSContents.xsl" $(OutputDir)\toc.xml /out:"$(OutputDir)\NLog.HxT"' />
    <Exec Command='hxcomp.exe -p $(OutputDir)\NLog.hxc' IgnoreExitCode="true" />
  </Target>

</Project>