<?xml version="1.0" encoding="utf-8" ?>
<project default="build" xmlns="http://nant.sf.net/NAnt.xsd">
    <tstamp />

    <tstamp property="buildtime" pattern="yyyy-MM-dd" verbose="true" />

    <property name="nlog.debug" value="true" />
    <property name="nlog.optimize" value="true" />
    <property name="buildconfigdir" value="${if(nlog.debug,'Debug','Release')}" dynamic="true" />
    <property name="nlog.define" value="NANT" />

    <property name="nlog.csc.args" value="/nowarn:1591" />

    <property name="ndocsyntax.path" value="tools/NDocSyntax.exe" />

    <property name="csc.warninglevel" value="4" />

    <property name="nlog.package.name" value="${tstamp.date}" unless="${property::exists('nlog.package.name')}" />
    <property name="nlog.release.dir" value="releases/${nlog.package.name}" />

    <property name="nlog.version.major" value="1" />
    <property name="nlog.version.minor" value="0" />
    <property name="nlog.version.revision" value="0" />
    <property name="nlog.version.build" value="505" />
    <property name="nlog.version" value="${nlog.version.major}.${nlog.version.minor}.${nlog.version.revision}.${nlog.version.build}" />

    <target name="configure-mono-1.0">
        <property name="nlog.define" value="${nlog.define};MONO;MONO_1_0" />
        <property name="nlog.csc.args" value="/nowarn:0618" />
        <property name="buildsubdir" value="Mono 1.0" />
    </target>

    <target name="configure-mono-2.0">
        <property name="nlog.define" value="${nlog.define};MONO;MONO_2_0;NET_2_API" />
        <property name="nlog.csc.args" value="/nowarn:1591,1699,0618" />
        <property name="buildsubdir" value="Mono 2.0" />
    </target>

    <target name="configure-net-1.0">
        <property name="nlog.define" value="${nlog.define};DOTNET;DOTNET_1_0" />
        <property name="buildsubdir" value=".NET Framework 1.0" />
    </target>
    
    <target name="configure-net-1.1">
        <property name="nlog.define" value="${nlog.define};DOTNET;DOTNET_1_1" />
        <property name="buildsubdir" value=".NET Framework 1.1" />
    </target>

    <target name="configure-net-2.0">
        <property name="nlog.define" value="${nlog.define};DOTNET;DOTNET2;DOTNET_2_0;NET_2_API" />
        <property name="nlog.csc.args" value="/nowarn:1591,1699" />
        <property name="buildsubdir" value=".NET Framework 2.0" />
    </target>

    <target name="configure-netcf-1.0">
        <property name="nlog.define" value="${nlog.define};NETCF;NETCF_1_0" />
        <property name="buildsubdir" value=".NET Compact Framework 1.0" />
    </target>

    <target name="configure-netcf-2.0">
        <property name="nlog.define" value="${nlog.define};NETCF;NETCF_2_0;NET_2_API" />
        <property name="nlog.csc.args" value="/nowarn:1591,1699" />
        <property name="buildsubdir" value=".NET Compact Framework 2.0" />
    </target>

    <target name="build-mono-1.0" depends="NLog, publisher-policy" />
    <target name="build-mono-2.0" depends="NLog, publisher-policy" />
    <target name="build-net-1.0" depends="NLog, NLog.ComInterop, NLogC, publisher-policy" />
    <target name="build-net-1.1" depends="NLog, NLog.ComInterop, NLogC, publisher-policy" />
    <target name="build-net-2.0" depends="NLog, NLog.ComInterop, NLogC, publisher-policy" />
    <target name="build-netcf-1.0" depends="NLog" />
    <target name="build-netcf-2.0" depends="NLog" />

    <target name="NLogC-net-1.0">
        <readregistry property="visualstudio.dir" key="SOFTWARE\Microsoft\VisualStudio\7.0\Setup\VS\ProductDir" />
        <readregistry property="visualc.dir" key="SOFTWARE\Microsoft\VisualStudio\7.0\Setup\VC\ProductDir" failonerror="false" />
        <if test="${not property::exists('visualc.dir')}">
            <property name="visualc.dir" value="${visualstudio.dir}\VC7" />
        </if>
        <property name="nlogc.compile.extraoptions" value="/clr" />
        <call target="NLogC-compile" />
    </target>

    <target name="NLogC-net-1.1">
        <readregistry property="visualstudio.dir" key="SOFTWARE\Microsoft\VisualStudio\7.1\Setup\VS\ProductDir" />
        <readregistry property="visualc.dir" key="SOFTWARE\Microsoft\VisualStudio\7.1\Setup\VC\ProductDir" failonerror="false" />
        <if test="${not property::exists('visualc.dir')}">
            <property name="visualc.dir" value="${visualstudio.dir}\VC7" />
        </if>
        <property name="nlogc.compile.extraoptions" value="/clr" />
        <call target="NLogC-compile" />
    </target>

    <target name="NLogC-net-2.0" depends="configure">
        <readregistry property="visualstudio.dir" key="SOFTWARE\Microsoft\VisualStudio\8.0\Setup\VS\ProductDir" />
        <readregistry property="visualc.dir" key="SOFTWARE\Microsoft\VisualStudio\8.0\Setup\VC\ProductDir" failonerror="false" />
        <if test="${not property::exists('visualc.dir')}">
            <property name="visualc.dir" value="${visualstudio.dir}\VC" />
        </if>
        <property name="nlogc.compile.extraoptions" value="/clr:oldsyntax" />
        <call target="NLogC-compile" />
    </target>

    <!-- unsupported platforms -->
    <target name="NLogC-mono-1.0" />
    <target name="NLogC-mono-2.0" />
    <target name="NLogC-netcf-1.0" />
    <target name="NLogC-netcf-2.0" />

    <target name="build" depends="configure, build-${framework::get-target-framework()}">
    </target>

    <target name="configure">
        <call target="configure-${framework::get-target-framework()}" />
        <property name="nlog.dir" value="${project::get-base-directory()}/build/bin/${buildconfigdir}/${buildsubdir}" unless="${property::exists('nlog.dir')}" />

        <echo message="Building NLog for ${framework::get-target-framework()}" />
        <echo message="Package name: ${nlog.package.name}" />
        <echo message="Target dir: ${nlog.dir}" />

        <mkdir dir="${nlog.dir}" />
    </target>

    <target name="detectversion">
    </target>

    <target name="debug">
        <property name="nlog.debug" value="true" />
        <property name="nlog.optimize" value="false" />
    </target>

    <target name="release">
        <property name="nlog.debug" value="false" />
        <property name="nlog.optimize" value="true" />
    </target>

    <target name="binary_snapshot" depends="build">
        <zip zipfile="${binary_snapshot.name}" if="false">
            <fileset basedir="build/bin/${buildconfigdir}${buildsubdir}">
                <include name="bin/*" />
            </fileset>
            <fileset basedir=".">
                <include name="LICENSE.txt" />
                <include name="examples/**/*" />
            </fileset>
            <fileset basedir="src/NLogC">
                <include name="NLogC FAQ.txt" />
            </fileset>
        </zip>
    </target>

    <target name="merged_binary_snapshot" depends="configure">
        <delete dir="build/binary_snapshot" />
        <property name="snapshot.dir" value="build/binary_snapshot/NLog-${nlog.package.name}" />
        <mkdir dir="${snapshot.dir}" />
        <exec program="svn" commandline="export examples ${snapshot.dir}/examples" />
        <copy todir="${snapshot.dir}/bin/.NET Framework 1.0">
            <fileset basedir="build/net-1.0${nlog.optionaldebug}/bin">
                <include name="*.*" />
            </fileset>
        </copy>
        <copy todir="${snapshot.dir}/bin/.NET Framework 1.1">
            <fileset basedir="build/net-1.1${nlog.optionaldebug}/bin">
                <include name="*.*" />
            </fileset>
        </copy>
        <copy todir="${snapshot.dir}/bin/.NET Framework 2.0">
            <fileset basedir="build/net-2.0${nlog.optionaldebug}/bin">
                <include name="*.*" />
            </fileset>
        </copy>
        <copy todir="${snapshot.dir}/bin/.NET Compact Framework 1.0">
            <fileset basedir="build/netcf-1.0${nlog.optionaldebug}/bin">
                <include name="*.*" />
            </fileset>
        </copy>
        <copy todir="${snapshot.dir}/bin/.NET Compact Framework 2.0">
            <fileset basedir="build/netcf-2.0${nlog.optionaldebug}/bin">
                <include name="*.*" />
            </fileset>
        </copy>
        <copy todir="${snapshot.dir}/bin/Mono 1.0">
            <fileset basedir="build/mono-1.0${nlog.optionaldebug}/bin">
                <include name="*.*" />
            </fileset>
        </copy>
        <copy todir="${snapshot.dir}/bin/Mono 2.0">
            <fileset basedir="build/mono-2.0${nlog.optionaldebug}/bin">
                <include name="*.*" />
            </fileset>
        </copy>
        <copy file="README.txt" todir="${snapshot.dir}" />
        <copy file="LICENSE.txt" todir="${snapshot.dir}" />
        <copy file="build/doc/help/NLog.chm" todir="${snapshot.dir}" />
        <copy file="src/NLogC/NLogC FAQ.txt" todir="${snapshot.dir}" />
        <zip zipfile="${merged_binary_snapshot.name}">
            <fileset basedir="build/binary_snapshot">
                <include name="**/*" />
                <exclude name=".svn" />
                <exclude name="_svn" />
            </fileset>
        </zip>
    </target>

    <target name="clean" depends="configure">
        <delete dir="build/bin" failonerror="false" />
        <delete dir="build/obj" failonerror="false" />
        <delete verbose="true">
            <fileset basedir=".">
                <include name="**/*.suo" />
                <include name="**/*.ncb" />
            </fileset>
        </delete>
        <delete verbose="true">
            <fileset basedir="src">
                <include name="*/bin/**" />
                <include name="*/obj/**" />
                <include name="*/bin" />
                <include name="*/obj" />
                <include name="NLogC/Debug/**" />
                <include name="NLogC/Release/**" />
                <include name="NLogC/Debug" />
                <include name="NLogC/Release" />
            </fileset>
        </delete>
        <delete verbose="true">
            <fileset basedir="tools">
                <include name="*/bin/**" />
                <include name="*/obj/**" />
                <include name="*/bin" />
                <include name="*/obj" />
            </fileset>
        </delete>
        <delete verbose="true">
            <fileset basedir="tests">
                <include name="*/bin/**" />
                <include name="*/obj/**" />
                <include name="*/bin" />
                <include name="*/obj" />
                <include name="NLogCTest/Debug/**" />
                <include name="NLogCTest/Release/**" />
                <include name="NLogCTest/Debug" />
                <include name="NLogCTest/Release" />
            </fileset>
        </delete>
    </target>

    <target name="NLog" depends="configure">
        <csc target="library" output="${nlog.dir}/NLog.dll" doc="${nlog.dir}/NLog.xml" define="${nlog.define}" debug="${nlog.debug}" optimize="${nlog.optimize}" warninglevel="${csc.warninglevel}" warnaserror="true">
            <sources basedir="src">
                <include name="NLog/**/*.cs" />
            </sources>
            <references>
                <include name="mscorlib.dll" />
                <include name="System.dll" />
                <include name="System.Xml.dll" />
                <include name="System.Data.dll" />
                <include name="System.Configuration.dll" />
                <include name="System.Messaging.dll" />
                <include name="System.Windows.Forms.dll" />
                <include name="System.Web.dll" />
                <include name="System.Web.Services.dll" />
                <include name="Mono.Posix.dll" />
            </references>
            <arg value="${nlog.csc.args}"/>
        </csc>
    </target>

    <target name="NLog.ComInterop" depends="NLog">
        <csc target="library" output="${nlog.dir}/NLog.ComInterop.dll" doc="${nlog.dir}/NLog.ComInterop.xml" define="${nlog.define}" debug="${nlog.debug}" optimize="${nlog.optimize}" warninglevel="${csc.warninglevel}">
            <sources basedir="src/NLog.ComInterop">
                <include name="**/*.cs" />
            </sources>
            <references>
                <include name="${nlog.dir}/NLog.dll" />
                <include name="mscorlib.dll" />
                <include name="System.dll" />
                <include name="System.Xml.dll" />
            </references>
            <arg value="${nlog.csc.args}"/>
        </csc>
    </target>

    <target name="NLog.UnitTests" depends="NLog">
        <copy file="${nant::get-base-directory()}/lib/${framework::get-family(framework::get-target-framework())}/${framework::get-version(framework::get-target-framework())}/nunit.framework.dll" tofile="${nlog.dir}/nunit.framework.dll" />
        <csc target="library" output="${nlog.dir}/NLog.UnitTests.dll" define="${nlog.define}" debug="${nlog.debug}" optimize="${nlog.optimize}" warninglevel="${csc.warninglevel}">
            <sources basedir="tests/NLog.UnitTests">
                <include name="**/*.cs" />
            </sources>
            <references>
                <include name="${nlog.dir}/NLog.dll" />
                <include name="${nlog.dir}/nunit.framework.dll" />
            </references>
        </csc>
        <csc target="exe" output="${nlog.dir}/Runner.exe" define="${nlog.define}" debug="${nlog.debug}" optimize="${nlog.optimize}" warninglevel="${csc.warninglevel}">
            <sources basedir="tools">
                <include name="Runner.cs" />
            </sources>
        </csc>
    </target>

    <target name="NLog.UnitTests.Web" depends="NLog">
        <copy file="${nant::get-base-directory()}/lib/${framework::get-family(framework::get-target-framework())}/${framework::get-version(framework::get-target-framework())}/nunit.framework.dll" tofile="${nlog.dir}/nunit.framework.dll" />
        <csc target="library" output="${nlog.dir}/NLog.UnitTests.Web.dll" define="${nlog.define}" debug="${nlog.debug}" optimize="${nlog.optimize}" warninglevel="${csc.warninglevel}">
            <sources basedir="tests/NLog.UnitTests.Web">
                <include name="**/*.cs" />
            </sources>
            <references>
                <include name="${nlog.dir}/NLog.dll" />
                <include name="${nlog.dir}/nunit.framework.dll" />
            </references>
        </csc>
    </target>

    <target name="NLogC" depends="NLog, NLogC-${framework::get-target-framework()}">
        <copy todir="${nlog.dir}/include">
            <fileset basedir="tests/NLogC">
                <include name="NLogC.h" />
                <include name="NLogger.h" />
            </fileset>
        </copy>
    </target>

    <target name="NLogC-compile">
        <path id="build.path.include">
            <pathelement dir="${visualc.dir}/INCLUDE" />
        </path>

        <path id="build.path.lib">
            <pathelement dir="${visualc.dir}/LIB" />
            <pathelement dir="${path::combine(framework::get-sdk-directory(framework::get-target-framework()),'..')}/LIB" />
        </path>

        <path id="build.path">
            <pathelement dir="${visualstudio.dir}/Common7/IDE" />
            <pathelement dir="${visualc.dir}/BIN" />
        </path>

        <setenv verbose="true">
            <variable name="INCLUDE">
                <path refid="build.path.include" />
            </variable>
            <variable name="LIB">
                <path refid="build.path.lib" />
            </variable>
            <variable name="PATH">
                <path refid="build.path" />
            </variable>
        </setenv>

        <delete dir="${nlog.dir}/obj" if="${directory::exists(nlog.dir + '/obj')}" />
        <mkdir dir="${nlog.dir}/obj" />

        <cl outputdir="${nlog.dir}/obj" options='/D "_CRT_SECURE_NO_DEPRECATE" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_USRDLL" /D "NLOGC_EXPORTS" /D "_WINDLL" /D "_MBCS" /FD /GS /W3 /c /Wp64 /Zi /TP ${nlogc.compile.extraoptions}'>
            <sources basedir="src/NLogC">
                <include name="**/*.cpp" />
            </sources>
            <forcedusingfiles>
                <include name="${framework::get-framework-directory(framework::get-target-framework())}/mscorlib.dll" />
                <include name="${nlog.dir}/NLog.dll" />
            </forcedusingfiles>
        </cl>
        <link output="${nlog.dir}/NLogC.dll" 
            pdbfile="${nlog.dir}/NLogC.pdb" 
            options="/nologo /INCREMENTAL:NO /NOLOGO /DLL /DEBUG /SUBSYSTEM:WINDOWS /OPT:REF /OPT:ICF /MACHINE:X86 /FIXED:No /NOENTRY /NODEFAULTLIB:nochkclr.obj /INCLUDE:__DllMainCRTStartup@12">
            <sources basedir="${nlog.dir}/obj">
                <include name="*.obj" />
            </sources>
        </link>
        <delete dir="${nlog.dir}/obj" />
    </target>

    <target name="publisher-policy" depends="configure">
        <uptodate property="publisherpolicy.uptodate">
            <targetfiles>
                <include name="${nlog.dir}/Policy.${nlog.version.major}.${nlog.version.minor}.NLog.dll" />
            </targetfiles>
            <sourcefiles basedir=".">
                <include name="src/NLog/AssemblyBuildInfo.cs" />
            </sourcefiles>
        </uptodate>
        <if test="${not publisherpolicy.uptodate}">
            <copy file="src/publisher_policy.config.template" tofile="${nlog.dir}/Policy.${nlog.version.major}.${nlog.version.minor}.NLog.xml" />
            <xmlpoke file="${nlog.dir}/Policy.${nlog.version.major}.${nlog.version.minor}.NLog.xml" xpath="/configuration/runtime/ms:assemblyBinding/ms:dependentAssembly/ms:bindingRedirect/@oldVersion"
                value="${nlog.version.major}.${nlog.version.minor}.0.0-${nlog.version.major}.${nlog.version.minor}.${nlog.version.revision}.${int::parse(nlog.version.build) - 1}">
                <namespaces>
                    <namespace prefix="ms" uri="urn:schemas-microsoft-com:asm.v1" />
                </namespaces>
            </xmlpoke>
            <xmlpoke file="${nlog.dir}/Policy.${nlog.version.major}.${nlog.version.minor}.NLog.xml" xpath="/configuration/runtime/ms:assemblyBinding/ms:dependentAssembly/ms:bindingRedirect/@newVersion"
                value="${nlog.version.major}.${nlog.version.minor}.${nlog.version.revision}.${nlog.version.build}">
                <namespaces>
                    <namespace prefix="ms" uri="urn:schemas-microsoft-com:asm.v1" />
                </namespaces>
            </xmlpoke>

            <exec program="${path::combine(framework::get-framework-directory(framework::get-target-framework()),'al')}"
                commandline="/nologo /link:Policy.${nlog.version.major}.${nlog.version.minor}.NLog.xml /out:Policy.${nlog.version.major}.${nlog.version.minor}.NLog.dll /keyfile:${path::combine(project::get-base-directory(),'src/NLog.snk')} /version:1.0.0.0"
                workingdir="${nlog.dir}" />
        </if>
    </target>

    <target name="allframeworksdebugandrelease">
        <call target="debug" />
        <call target="allframeworks" />
        <call target="release" />
        <call target="allframeworks" />
    </target>
    
    <target name="allframeworks">
        <property name="debugrelease" value="release" />
        <property name="debugrelease" value="debug" if="${nlog.debug}" />
        <exec program="nant" commandline="-t:net-1.0 -D:nlog.package.name=${nlog.package.name} ${debugrelease} build" />
        <exec program="nant" commandline="-t:net-1.1 -D:nlog.package.name=${nlog.package.name} ${debugrelease} build" />
        <exec program="nant" commandline="-t:net-2.0 -D:nlog.package.name=${nlog.package.name} ${debugrelease} build" />
        <exec program="nant" commandline="-t:netcf-1.0 -D:nlog.package.name=${nlog.package.name} ${debugrelease} build" />
        <exec program="nant" commandline="-t:netcf-2.0 -D:nlog.package.name=${nlog.package.name} ${debugrelease} build" />
        <exec program="nant" commandline="-t:mono-1.0 -D:nlog.package.name=${nlog.package.name} ${debugrelease} build" />
        <exec program="nant" commandline="-t:mono-2.0 -D:nlog.package.name=${nlog.package.name} ${debugrelease} build" />
    </target>

    <target name="vs2005templates">
        <mkdir dir="build/templates" />
        <foreach item="String" in="Empty,Typical,Console" delim="," property="projecttype">
            <foreach item="String" in="CSharp,VisualBasic,JSharp" delim="," property="language">
                <!-- standard version -->
                <delete dir="tmp_dir" failonerror="false" />
                <copy todir="tmp_dir">
                    <fileset basedir="tools/VS2005Templates/ItemTemplates/${projecttype}NLogConfig">
                        <include name="**/*" />
                    </fileset>
                    <filterchain>
                        <replacestring from="$nlogversion$" to="${nlog.version}" />
                        <replacestring from="$projecttype$" to="${language}" />
                        <replacestring from="$projectsubtype$" to="" />
                    </filterchain>
                </copy>
                <zip zipfile="build/templates/${language}${projecttype}NLogConfig.zip">
                    <fileset basedir="tmp_dir">
                        <include name="**/*" />
                    </fileset>
                </zip>

                <!-- web standard version -->
                <delete dir="tmp_dir" failonerror="false" />
                <copy todir="tmp_dir">
                    <fileset basedir="tools/VS2005Templates/ItemTemplates/${projecttype}NLogConfig">
                        <include name="**/*" />
                    </fileset>
                    <filterchain>
                        <replacestring from="$nlogversion$" to="${nlog.version}" />
                        <replacestring from="$projecttype$" to="Web" />
                        <replacestring from="$projectsubtype$" to="${language}" />
                    </filterchain>
                </copy>
                <zip zipfile="build/templates/Web${language}${projecttype}NLogConfig.zip">
                    <fileset basedir="tmp_dir">
                        <include name="**/*" />
                    </fileset>
                </zip>
            </foreach>
        </foreach>
        <delete dir="tmp_dir" failonerror="false" />
    </target>

    <target name="clean_examples">
        <delete>
            <fileset basedir="examples">
                <include name="**/*.suo" />
                <include name="**/bin/**/*" />
                <include name="**/obj/**/*" />
                <include name="**/bin" />
                <include name="**/obj" />
                <include name="**/*proj.user" />
            </fileset>
        </delete>
    </target>
</project>
